@model PetPals.Web.ViewModels.Pet.AllPetsQueryModel

@{
    ViewBag.Title = "All Pets";
    int totalPages = (int)Math.Ceiling((double)Model.TotalPets / Model.PetsPerPage);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Pets</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        }

        body {
            background-color: #ffe9d2;
            padding: 2rem;
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 100px auto 0; /* Add 100px top margin to move it down */
        }

        /* Search and Filter Section */
        .controls {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .search-bar {
            flex: 1;
            position: relative;
            min-width: 200px;
        }

            .search-bar input {
                width: 100%;
                padding: 0.75rem 1rem 0.75rem 2.5rem;
                border: 2px solid #e2e8f0;
                border-radius: 10px;
                font-size: 1rem;
                transition: all 0.3s ease;
            }

            .search-bar i {
                position: absolute;
                left: 1rem;
                top: 50%;
                transform: translateY(-50%);
                color: #94a3b8;
            }

        .sort-by {
            padding: 0.75rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            background-color: white;
            cursor: pointer;
        }

        /* Pet Cards Grid */
        .pets-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 2rem;
        }

        .pet-card {
            background: white;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
            position: relative;
        }

            .pet-card:hover {
                transform: translateY(-5px);
            }

        .pet-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .wishlist-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: white;
            border: none;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

            .wishlist-btn i {
                color: #94a3b8;
                transition: color 0.3s ease;
            }

            .wishlist-btn:hover i {
                color: #ef4444;
            }

        .pet-info {
            padding: 1.5rem;
        }

        .pet-name {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .pet-breed, .pet-age {
            color: #64748b;
            font-size: 0.9rem;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 2rem;
        }

            .pagination button {
                padding: 0.5rem 1rem;
                border: 2px solid #e2e8f0;
                background: white;
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.3s ease;
            }

                .pagination button:hover {
                    background: #f8fafc;
                }

                .pagination button.active {
                    background: #3b82f6;
                    color: white;
                    border-color: #3b82f6;
                }
    </style>
</head>
<body>
    
    <div class="container">
    <!-- Search and Filter Controls -->
    <form method="get" class="controls">
        <!-- Search Bar -->
        <div class="search-bar">
            <input type="text" name="searchInput" value="@Model.SearchInput" placeholder="Search pets by name or species..." class="form-control">
        </div>

        <!-- Filter Dropdown -->
        <!-- Filter Dropdown -->
            <select asp-for="Filter" class="form-control">
                <option value="">All Species</option>
                <option value="Dog" selected="@(Model.Filter == "Dog")">Dog</option>
                <option value="Cat" selected="@(Model.Filter == "Cat")">Cat</option>
                <option value="Bird" selected="@(Model.Filter == "Bird")">Bird</option>
            </select>

            <select asp-for="SortBy" class="form-control">
                <option value="">Default</option>
                <option value="name" selected="@(Model.SortBy == "name")">Name</option>
                <option value="age" selected="@(Model.SortBy == "age")">Age</option>
                <option value="species" selected="@(Model.SortBy == "species")">Species</option>
            </select>


        <!-- Submit Button -->
        <button type="submit" class="btn btn-primary">Apply</button>
    </form>

    <!-- Pets Grid -->
    <div class="pets-grid">
        @foreach (var pet in Model.Pets)
        {
            <div class="pet-card">
                <h3>@pet.Name</h3>
                <p><strong>Species:</strong> @pet.Species</p>
                <p><strong>Age:</strong> @pet.Age</p>
            </div>
        }
    </div>
</div>

        <!-- Pagination -->
        <div class="pagination">
            <button class="pagination-btn prev"
            @(Model.CurrentPage == 1 ? "disabled" : "")
                    onclick="navigatePage(@(Model.CurrentPage - 1))">
                &lt;
            </button>

            @for (int i = 1; i <= totalPages; i++)
            {
                <button class="pagination-btn @(Model.CurrentPage == i ? "active" : "")"
                        onclick="navigatePage(@i)">
                    @i
                </button>
            }

            <button class="pagination-btn next"
            @(Model.CurrentPage == totalPages ? "disabled" : "")
                    onclick="navigatePage(@(Model.CurrentPage + 1))">
                &gt;
            </button>
        </div>
    </>

</body>
</html>
