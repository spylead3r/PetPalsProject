// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetPals.Data;

#nullable disable

namespace PetPals.Data.Migrations
{
    [DbContext(typeof(PetPalsDbContext))]
    [Migration("20241218154151_PetSeedData")]
    partial class PetSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PetPals.Data.Models.AdoptionRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PetId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("AdoptionRequests");
                });

            modelBuilder.Entity("PetPals.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("LastName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PetPals.Data.Models.ApplicationUserPet", b =>
                {
                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "PetId");

                    b.HasIndex("PetId");

                    b.ToTable("ApplicationUserPet");
                });

            modelBuilder.Entity("PetPals.Data.Models.Donation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DonationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("PetPals.Data.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("PetPals.Data.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("PetPals.Data.Models.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AdoptionFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AdoptionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HealthStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c21e949-f40f-4d42-aafe-10539341a995"),
                            AdoptionFee = 250.00m,
                            AdoptionStatus = "Available",
                            Age = 3,
                            Breed = "Golden Retriever",
                            HealthStatus = "Healthy",
                            Name = "Buddy",
                            PhotoPath = "https://images.unsplash.com/photo-1517849845537-4d257902454a",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("ea5bca3f-322a-4ae2-aa84-846aa5aabf7d"),
                            AdoptionFee = 200.00m,
                            AdoptionStatus = "Available",
                            Age = 2,
                            Breed = "Labrador",
                            HealthStatus = "Healthy",
                            Name = "Max",
                            PhotoPath = "https://images.unsplash.com/photo-1507149833265-60c372daea22",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("33efd25e-112e-4b3f-b2e6-ae4b6343af6c"),
                            AdoptionFee = 150.00m,
                            AdoptionStatus = "Adopted",
                            Age = 4,
                            Breed = "Siamese",
                            HealthStatus = "Healthy",
                            Name = "Bella",
                            PhotoPath = "https://images.unsplash.com/photo-1574158622682-e40e69881006",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("c117ba2c-0e9f-4481-9caa-74ab3e37e47a"),
                            AdoptionFee = 180.00m,
                            AdoptionStatus = "Available",
                            Age = 5,
                            Breed = "Beagle",
                            HealthStatus = "Healthy",
                            Name = "Charlie",
                            PhotoPath = "https://images.unsplash.com/photo-1558788353-f76d92427f16",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("8b48ef82-6814-41a9-962b-fdbd7e03714f"),
                            AdoptionFee = 200.00m,
                            AdoptionStatus = "Available",
                            Age = 3,
                            Breed = "Maine Coon",
                            HealthStatus = "Healthy",
                            Name = "Luna",
                            PhotoPath = "https://images.unsplash.com/photo-1560114924-2d5a1c1a0f8d",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("e4ed0808-e497-48e6-b20a-374eb4dc1af6"),
                            AdoptionFee = 220.00m,
                            AdoptionStatus = "Available",
                            Age = 4,
                            Breed = "Bulldog",
                            HealthStatus = "Healthy",
                            Name = "Rocky",
                            PhotoPath = "https://images.unsplash.com/photo-1560807707-8cc77767d783",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("1420c561-d68d-43e1-90c3-d73c5d962971"),
                            AdoptionFee = 180.00m,
                            AdoptionStatus = "Adopted",
                            Age = 2,
                            Breed = "Persian",
                            HealthStatus = "Healthy",
                            Name = "Molly",
                            PhotoPath = "https://images.unsplash.com/photo-1517423440428-a5a00ad493e8",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("7df4f163-4b37-457d-808f-964d081d1e64"),
                            AdoptionFee = 250.00m,
                            AdoptionStatus = "Available",
                            Age = 3,
                            Breed = "Poodle",
                            HealthStatus = "Healthy",
                            Name = "Daisy",
                            PhotoPath = "https://images.unsplash.com/photo-1502673530728-f79b4cab31b1",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("5c89dd6a-5952-4abd-9dc9-27f759d10d6b"),
                            AdoptionFee = 210.00m,
                            AdoptionStatus = "Available",
                            Age = 4,
                            Breed = "Ragdoll",
                            HealthStatus = "Healthy",
                            Name = "Oliver",
                            PhotoPath = "https://images.unsplash.com/photo-1556784344-24eb6fdae062",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("ca850304-12e0-4e5f-81ad-0012aa8b9037"),
                            AdoptionFee = 190.00m,
                            AdoptionStatus = "Adopted",
                            Age = 2,
                            Breed = "Corgi",
                            HealthStatus = "Healthy",
                            Name = "Cooper",
                            PhotoPath = "https://images.unsplash.com/photo-1548690590-5b66c99197d2",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("c1e11fbb-f38d-4049-b84e-ced7dd660cfe"),
                            AdoptionFee = 230.00m,
                            AdoptionStatus = "Available",
                            Age = 5,
                            Breed = "Bengal",
                            HealthStatus = "Healthy",
                            Name = "Simba",
                            PhotoPath = "https://images.unsplash.com/photo-1543852786-1cf6624b9987",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("1235edff-3456-4e3c-86f9-0b99481bc502"),
                            AdoptionFee = 240.00m,
                            AdoptionStatus = "Available",
                            Age = 4,
                            Breed = "Dachshund",
                            HealthStatus = "Healthy",
                            Name = "Ruby",
                            PhotoPath = "https://images.unsplash.com/photo-1518717758536-85ae29035b6d",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("5580c0f2-2405-4abf-9745-692cd086421b"),
                            AdoptionFee = 220.00m,
                            AdoptionStatus = "Adopted",
                            Age = 3,
                            Breed = "Sphynx",
                            HealthStatus = "Healthy",
                            Name = "Milo",
                            PhotoPath = "https://images.unsplash.com/photo-1581235720704-dc7318e1c593",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("d3c6a9d4-9721-4445-bd43-5bccbeb03d52"),
                            AdoptionFee = 230.00m,
                            AdoptionStatus = "Available",
                            Age = 2,
                            Breed = "Boxer",
                            HealthStatus = "Healthy",
                            Name = "Zoe",
                            PhotoPath = "https://images.unsplash.com/photo-1525253086316-d0c936c814f8",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("2186355c-fb91-437e-b798-c15f8bf66748"),
                            AdoptionFee = 240.00m,
                            AdoptionStatus = "Available",
                            Age = 5,
                            Breed = "Scottish Fold",
                            HealthStatus = "Healthy",
                            Name = "Cleo",
                            PhotoPath = "https://images.unsplash.com/photo-1559235038-1b063ae6fcf6",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("e2a74697-ff59-4ec5-be88-0debb048198a"),
                            AdoptionFee = 260.00m,
                            AdoptionStatus = "Available",
                            Age = 3,
                            Breed = "German Shepherd",
                            HealthStatus = "Healthy",
                            Name = "Oscar",
                            PhotoPath = "https://images.unsplash.com/photo-1583511655857-7b8bd3c22f8f",
                            Species = "Dog"
                        },
                        new
                        {
                            Id = new Guid("932d5ddb-dde0-4e4c-95a4-1a027e0148a5"),
                            AdoptionFee = 250.00m,
                            AdoptionStatus = "Available",
                            Age = 4,
                            Breed = "Abyssinian",
                            HealthStatus = "Healthy",
                            Name = "Lilly",
                            PhotoPath = "https://images.unsplash.com/photo-1592194996308-7b5b5c2f896f",
                            Species = "Cat"
                        },
                        new
                        {
                            Id = new Guid("06bb9a1e-180d-480d-b7c0-4e8020521510"),
                            AdoptionFee = 270.00m,
                            AdoptionStatus = "Available",
                            Age = 2,
                            Breed = "Husky",
                            HealthStatus = "Healthy",
                            Name = "Jake",
                            PhotoPath = "https://images.unsplash.com/photo-1570211776045-2c771c36e2e9",
                            Species = "Dog"
                        });
                });

            modelBuilder.Entity("PetPals.Data.Models.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("PetPals.Data.Models.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("PetPals.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("PetPals.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("PetPals.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetPals.Data.Models.AdoptionRequest", b =>
                {
                    b.HasOne("PetPals.Data.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetPals.Data.Models.ApplicationUserPet", b =>
                {
                    b.HasOne("PetPals.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserMovies")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Data.Models.Pet", "Pet")
                        .WithMany("UserPets")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetPals.Data.Models.Donation", b =>
                {
                    b.HasOne("PetPals.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetPals.Data.Models.Feedback", b =>
                {
                    b.HasOne("PetPals.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetPals.Data.Models.Wishlist", b =>
                {
                    b.HasOne("PetPals.Data.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetPals.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetPals.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserMovies");
                });

            modelBuilder.Entity("PetPals.Data.Models.Pet", b =>
                {
                    b.Navigation("UserPets");
                });
#pragma warning restore 612, 618
        }
    }
}
